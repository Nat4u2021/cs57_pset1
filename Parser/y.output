State 113 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 declaration: INT STR ';'

    2 definition1: EXTERN VOID PRINT '(' INT ')' ';'

    3 definition2: EXTERN INT READ '(' ')' ';'

    4 return_statement: RETURN term ';'
    5                 | RETURN expression

    6 term: NUM
    7     | STR

    8 eq_cond: term '=' '=' term

    9 lt_cond: term '<' term

   10 gt_cond: term '>' term

   11 gteq_cond: term '>' '=' term

   12 lteq_cond: term '<' '=' term

   13 neq_cond: term '!' '=' term

   14 comparison: eq_cond
   15           | lt_cond
   16           | lteq_cond
   17           | gteq_cond
   18           | gt_cond
   19           | neq_cond

   20 add: term '+' term ';'

   21 subtract: term '-' term ';'

   22 multiply: term '*' term ';'

   23 divide: term '/' term ';'

   24 unary: '-' term ';'

   25 expression: add
   26           | subtract
   27           | multiply
   28           | divide
   29           | unary

   30 assign: STR '=' expression
   31       | STR '=' NUM ';'
   32       | STR '=' STR ';'
   33       | STR '=' func_call

   34 func_call: PRINT '(' STR ')' ';'
   35          | PRINT '(' NUM ')' ';'
   36          | READ '(' ')' ';'

   37 if_block: IF '(' comparison ')' stmt
   38         | IF '(' comparison ')' stmt else_block

   39 while_block: WHILE '(' comparison ')' stmt

   40 else_block: ELSE stmt

   41 stmt: func_call
   42     | return_statement
   43     | assign
   44     | declaration
   45     | if_block
   46     | while_block
   47     | comnd_block

   48 stmts: stmts stmt
   49      | stmt

   50 comnd_block: '{' stmts '}'

   51 func_def: INT STR '(' INT STR ')' comnd_block
   52         | INT STR '(' ')' comnd_block

   53 program: definition1 definition2 func_def
   54        | definition2 definition1 func_def


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 13
    '(' (40) 2 3 34 35 36 37 38 39 51 52
    ')' (41) 2 3 34 35 36 37 38 39 51 52
    '*' (42) 22
    '+' (43) 20
    '-' (45) 21 24
    '/' (47) 23
    ';' (59) 1 2 3 4 20 21 22 23 24 31 32 34 35 36
    '<' (60) 9 12
    '=' (61) 8 11 12 13 30 31 32 33
    '>' (62) 10 11
    '{' (123) 50
    '}' (125) 50
    error (256)
    INT (258) 1 2 3 51 52
    EXTERN (259) 2 3
    IF (260) 37 38
    WHILE (261) 39
    ELSE (262) 40
    RETURN (263) 4 5
    VOID (264) 2
    NUM <ival> (265) 6 31 35
    STR <sname> (266) 1 7 30 31 32 33 34 51 52
    READ <sname> (267) 3 36
    PRINT <sname> (268) 2 34 35


Nonterminals, with rules where they appear

    $accept (27)
        on left: 0
    declaration <nptr> (28)
        on left: 1
        on right: 44
    definition1 <nptr> (29)
        on left: 2
        on right: 53 54
    definition2 <nptr> (30)
        on left: 3
        on right: 53 54
    return_statement <nptr> (31)
        on left: 4 5
        on right: 42
    term <nptr> (32)
        on left: 6 7
        on right: 4 8 9 10 11 12 13 20 21 22 23 24
    eq_cond <nptr> (33)
        on left: 8
        on right: 14
    lt_cond <nptr> (34)
        on left: 9
        on right: 15
    gt_cond <nptr> (35)
        on left: 10
        on right: 18
    gteq_cond <nptr> (36)
        on left: 11
        on right: 17
    lteq_cond <nptr> (37)
        on left: 12
        on right: 16
    neq_cond <nptr> (38)
        on left: 13
        on right: 19
    comparison <nptr> (39)
        on left: 14 15 16 17 18 19
        on right: 37 38 39
    add <nptr> (40)
        on left: 20
        on right: 25
    subtract <nptr> (41)
        on left: 21
        on right: 26
    multiply <nptr> (42)
        on left: 22
        on right: 27
    divide <nptr> (43)
        on left: 23
        on right: 28
    unary <nptr> (44)
        on left: 24
        on right: 29
    expression <nptr> (45)
        on left: 25 26 27 28 29
        on right: 5 30
    assign <nptr> (46)
        on left: 30 31 32 33
        on right: 43
    func_call <nptr> (47)
        on left: 34 35 36
        on right: 33 41
    if_block <nptr> (48)
        on left: 37 38
        on right: 45
    while_block <nptr> (49)
        on left: 39
        on right: 46
    else_block <nptr> (50)
        on left: 40
        on right: 38
    stmt <nptr> (51)
        on left: 41 42 43 44 45 46 47
        on right: 37 38 39 40 48 49
    stmts <svec_ptr> (52)
        on left: 48 49
        on right: 48 50
    comnd_block <nptr> (53)
        on left: 50
        on right: 47 51 52
    func_def <nptr> (54)
        on left: 51 52
        on right: 53 54
    program <nptr> (55)
        on left: 53 54
        on right: 0


State 0

    0 $accept: • program $end

    EXTERN  shift, and go to state 1

    definition1  go to state 2
    definition2  go to state 3
    program      go to state 4


State 1

    2 definition1: EXTERN • VOID PRINT '(' INT ')' ';'
    3 definition2: EXTERN • INT READ '(' ')' ';'

    INT   shift, and go to state 5
    VOID  shift, and go to state 6


State 2

   53 program: definition1 • definition2 func_def

    EXTERN  shift, and go to state 7

    definition2  go to state 8


State 3

   54 program: definition2 • definition1 func_def

    EXTERN  shift, and go to state 9

    definition1  go to state 10


State 4

    0 $accept: program • $end

    $end  shift, and go to state 11


State 5

    3 definition2: EXTERN INT • READ '(' ')' ';'

    READ  shift, and go to state 12


State 6

    2 definition1: EXTERN VOID • PRINT '(' INT ')' ';'

    PRINT  shift, and go to state 13


State 7

    3 definition2: EXTERN • INT READ '(' ')' ';'

    INT  shift, and go to state 5


State 8

   53 program: definition1 definition2 • func_def

    INT  shift, and go to state 14

    func_def  go to state 15


State 9

    2 definition1: EXTERN • VOID PRINT '(' INT ')' ';'

    VOID  shift, and go to state 6


State 10

   54 program: definition2 definition1 • func_def

    INT  shift, and go to state 14

    func_def  go to state 16


State 11

    0 $accept: program $end •

    $default  accept


State 12

    3 definition2: EXTERN INT READ • '(' ')' ';'

    '('  shift, and go to state 17


State 13

    2 definition1: EXTERN VOID PRINT • '(' INT ')' ';'

    '('  shift, and go to state 18


State 14

   51 func_def: INT • STR '(' INT STR ')' comnd_block
   52         | INT • STR '(' ')' comnd_block

    STR  shift, and go to state 19


State 15

   53 program: definition1 definition2 func_def •

    $default  reduce using rule 53 (program)


State 16

   54 program: definition2 definition1 func_def •

    $default  reduce using rule 54 (program)


State 17

    3 definition2: EXTERN INT READ '(' • ')' ';'

    ')'  shift, and go to state 20


State 18

    2 definition1: EXTERN VOID PRINT '(' • INT ')' ';'

    INT  shift, and go to state 21


State 19

   51 func_def: INT STR • '(' INT STR ')' comnd_block
   52         | INT STR • '(' ')' comnd_block

    '('  shift, and go to state 22


State 20

    3 definition2: EXTERN INT READ '(' ')' • ';'

    ';'  shift, and go to state 23


State 21

    2 definition1: EXTERN VOID PRINT '(' INT • ')' ';'

    ')'  shift, and go to state 24


State 22

   51 func_def: INT STR '(' • INT STR ')' comnd_block
   52         | INT STR '(' • ')' comnd_block

    INT  shift, and go to state 25
    ')'  shift, and go to state 26


State 23

    3 definition2: EXTERN INT READ '(' ')' ';' •

    $default  reduce using rule 3 (definition2)


State 24

    2 definition1: EXTERN VOID PRINT '(' INT ')' • ';'

    ';'  shift, and go to state 27


State 25

   51 func_def: INT STR '(' INT • STR ')' comnd_block

    STR  shift, and go to state 28


State 26

   52 func_def: INT STR '(' ')' • comnd_block

    '{'  shift, and go to state 29

    comnd_block  go to state 30


State 27

    2 definition1: EXTERN VOID PRINT '(' INT ')' ';' •

    $default  reduce using rule 2 (definition1)


State 28

   51 func_def: INT STR '(' INT STR • ')' comnd_block

    ')'  shift, and go to state 31


State 29

   50 comnd_block: '{' • stmts '}'

    INT     shift, and go to state 32
    IF      shift, and go to state 33
    WHILE   shift, and go to state 34
    RETURN  shift, and go to state 35
    STR     shift, and go to state 36
    READ    shift, and go to state 37
    PRINT   shift, and go to state 38
    '{'     shift, and go to state 29

    declaration       go to state 39
    return_statement  go to state 40
    assign            go to state 41
    func_call         go to state 42
    if_block          go to state 43
    while_block       go to state 44
    stmt              go to state 45
    stmts             go to state 46
    comnd_block       go to state 47


State 30

   52 func_def: INT STR '(' ')' comnd_block •

    $default  reduce using rule 52 (func_def)


State 31

   51 func_def: INT STR '(' INT STR ')' • comnd_block

    '{'  shift, and go to state 29

    comnd_block  go to state 48


State 32

    1 declaration: INT • STR ';'

    STR  shift, and go to state 49


State 33

   37 if_block: IF • '(' comparison ')' stmt
   38         | IF • '(' comparison ')' stmt else_block

    '('  shift, and go to state 50


State 34

   39 while_block: WHILE • '(' comparison ')' stmt

    '('  shift, and go to state 51


State 35

    4 return_statement: RETURN • term ';'
    5                 | RETURN • expression

    NUM  shift, and go to state 52
    STR  shift, and go to state 53
    '-'  shift, and go to state 54

    term        go to state 55
    add         go to state 56
    subtract    go to state 57
    multiply    go to state 58
    divide      go to state 59
    unary       go to state 60
    expression  go to state 61


State 36

   30 assign: STR • '=' expression
   31       | STR • '=' NUM ';'
   32       | STR • '=' STR ';'
   33       | STR • '=' func_call

    '='  shift, and go to state 62


State 37

   36 func_call: READ • '(' ')' ';'

    '('  shift, and go to state 63


State 38

   34 func_call: PRINT • '(' STR ')' ';'
   35          | PRINT • '(' NUM ')' ';'

    '('  shift, and go to state 64


State 39

   44 stmt: declaration •

    $default  reduce using rule 44 (stmt)


State 40

   42 stmt: return_statement •

    $default  reduce using rule 42 (stmt)


State 41

   43 stmt: assign •

    $default  reduce using rule 43 (stmt)


State 42

   41 stmt: func_call •

    $default  reduce using rule 41 (stmt)


State 43

   45 stmt: if_block •

    $default  reduce using rule 45 (stmt)


State 44

   46 stmt: while_block •

    $default  reduce using rule 46 (stmt)


State 45

   49 stmts: stmt •

    $default  reduce using rule 49 (stmts)


State 46

   48 stmts: stmts • stmt
   50 comnd_block: '{' stmts • '}'

    INT     shift, and go to state 32
    IF      shift, and go to state 33
    WHILE   shift, and go to state 34
    RETURN  shift, and go to state 35
    STR     shift, and go to state 36
    READ    shift, and go to state 37
    PRINT   shift, and go to state 38
    '{'     shift, and go to state 29
    '}'     shift, and go to state 65

    declaration       go to state 39
    return_statement  go to state 40
    assign            go to state 41
    func_call         go to state 42
    if_block          go to state 43
    while_block       go to state 44
    stmt              go to state 66
    comnd_block       go to state 47


State 47

   47 stmt: comnd_block •

    $default  reduce using rule 47 (stmt)


State 48

   51 func_def: INT STR '(' INT STR ')' comnd_block •

    $default  reduce using rule 51 (func_def)


State 49

    1 declaration: INT STR • ';'

    ';'  shift, and go to state 67


State 50

   37 if_block: IF '(' • comparison ')' stmt
   38         | IF '(' • comparison ')' stmt else_block

    NUM  shift, and go to state 52
    STR  shift, and go to state 53

    term        go to state 68
    eq_cond     go to state 69
    lt_cond     go to state 70
    gt_cond     go to state 71
    gteq_cond   go to state 72
    lteq_cond   go to state 73
    neq_cond    go to state 74
    comparison  go to state 75


State 51

   39 while_block: WHILE '(' • comparison ')' stmt

    NUM  shift, and go to state 52
    STR  shift, and go to state 53

    term        go to state 68
    eq_cond     go to state 69
    lt_cond     go to state 70
    gt_cond     go to state 71
    gteq_cond   go to state 72
    lteq_cond   go to state 73
    neq_cond    go to state 74
    comparison  go to state 76


State 52

    6 term: NUM •

    $default  reduce using rule 6 (term)


State 53

    7 term: STR •

    $default  reduce using rule 7 (term)


State 54

   24 unary: '-' • term ';'

    NUM  shift, and go to state 52
    STR  shift, and go to state 53

    term  go to state 77


State 55

    4 return_statement: RETURN term • ';'
   20 add: term • '+' term ';'
   21 subtract: term • '-' term ';'
   22 multiply: term • '*' term ';'
   23 divide: term • '/' term ';'

    ';'  shift, and go to state 78
    '+'  shift, and go to state 79
    '-'  shift, and go to state 80
    '*'  shift, and go to state 81
    '/'  shift, and go to state 82


State 56

   25 expression: add •

    $default  reduce using rule 25 (expression)


State 57

   26 expression: subtract •

    $default  reduce using rule 26 (expression)


State 58

   27 expression: multiply •

    $default  reduce using rule 27 (expression)


State 59

   28 expression: divide •

    $default  reduce using rule 28 (expression)


State 60

   29 expression: unary •

    $default  reduce using rule 29 (expression)


State 61

    5 return_statement: RETURN expression •

    $default  reduce using rule 5 (return_statement)


State 62

   30 assign: STR '=' • expression
   31       | STR '=' • NUM ';'
   32       | STR '=' • STR ';'
   33       | STR '=' • func_call

    NUM    shift, and go to state 83
    STR    shift, and go to state 84
    READ   shift, and go to state 37
    PRINT  shift, and go to state 38
    '-'    shift, and go to state 54

    term        go to state 85
    add         go to state 56
    subtract    go to state 57
    multiply    go to state 58
    divide      go to state 59
    unary       go to state 60
    expression  go to state 86
    func_call   go to state 87


State 63

   36 func_call: READ '(' • ')' ';'

    ')'  shift, and go to state 88


State 64

   34 func_call: PRINT '(' • STR ')' ';'
   35          | PRINT '(' • NUM ')' ';'

    NUM  shift, and go to state 89
    STR  shift, and go to state 90


State 65

   50 comnd_block: '{' stmts '}' •

    $default  reduce using rule 50 (comnd_block)


State 66

   48 stmts: stmts stmt •

    $default  reduce using rule 48 (stmts)


State 67

    1 declaration: INT STR ';' •

    $default  reduce using rule 1 (declaration)


State 68

    8 eq_cond: term • '=' '=' term
    9 lt_cond: term • '<' term
   10 gt_cond: term • '>' term
   11 gteq_cond: term • '>' '=' term
   12 lteq_cond: term • '<' '=' term
   13 neq_cond: term • '!' '=' term

    '='  shift, and go to state 91
    '<'  shift, and go to state 92
    '>'  shift, and go to state 93
    '!'  shift, and go to state 94


State 69

   14 comparison: eq_cond •

    $default  reduce using rule 14 (comparison)


State 70

   15 comparison: lt_cond •

    $default  reduce using rule 15 (comparison)


State 71

   18 comparison: gt_cond •

    $default  reduce using rule 18 (comparison)


State 72

   17 comparison: gteq_cond •

    $default  reduce using rule 17 (comparison)


State 73

   16 comparison: lteq_cond •

    $default  reduce using rule 16 (comparison)


State 74

   19 comparison: neq_cond •

    $default  reduce using rule 19 (comparison)


State 75

   37 if_block: IF '(' comparison • ')' stmt
   38         | IF '(' comparison • ')' stmt else_block

    ')'  shift, and go to state 95


State 76

   39 while_block: WHILE '(' comparison • ')' stmt

    ')'  shift, and go to state 96


State 77

   24 unary: '-' term • ';'

    ';'  shift, and go to state 97


State 78

    4 return_statement: RETURN term ';' •

    $default  reduce using rule 4 (return_statement)


State 79

   20 add: term '+' • term ';'

    NUM  shift, and go to state 52
    STR  shift, and go to state 53

    term  go to state 98


State 80

   21 subtract: term '-' • term ';'

    NUM  shift, and go to state 52
    STR  shift, and go to state 53

    term  go to state 99


State 81

   22 multiply: term '*' • term ';'

    NUM  shift, and go to state 52
    STR  shift, and go to state 53

    term  go to state 100


State 82

   23 divide: term '/' • term ';'

    NUM  shift, and go to state 52
    STR  shift, and go to state 53

    term  go to state 101


State 83

    6 term: NUM •
   31 assign: STR '=' NUM • ';'

    ';'  shift, and go to state 102

    $default  reduce using rule 6 (term)


State 84

    7 term: STR •
   32 assign: STR '=' STR • ';'

    ';'  shift, and go to state 103

    $default  reduce using rule 7 (term)


State 85

   20 add: term • '+' term ';'
   21 subtract: term • '-' term ';'
   22 multiply: term • '*' term ';'
   23 divide: term • '/' term ';'

    '+'  shift, and go to state 79
    '-'  shift, and go to state 80
    '*'  shift, and go to state 81
    '/'  shift, and go to state 82


State 86

   30 assign: STR '=' expression •

    $default  reduce using rule 30 (assign)


State 87

   33 assign: STR '=' func_call •

    $default  reduce using rule 33 (assign)


State 88

   36 func_call: READ '(' ')' • ';'

    ';'  shift, and go to state 104


State 89

   35 func_call: PRINT '(' NUM • ')' ';'

    ')'  shift, and go to state 105


State 90

   34 func_call: PRINT '(' STR • ')' ';'

    ')'  shift, and go to state 106


State 91

    8 eq_cond: term '=' • '=' term

    '='  shift, and go to state 107


State 92

    9 lt_cond: term '<' • term
   12 lteq_cond: term '<' • '=' term

    NUM  shift, and go to state 52
    STR  shift, and go to state 53
    '='  shift, and go to state 108

    term  go to state 109


State 93

   10 gt_cond: term '>' • term
   11 gteq_cond: term '>' • '=' term

    NUM  shift, and go to state 52
    STR  shift, and go to state 53
    '='  shift, and go to state 110

    term  go to state 111


State 94

   13 neq_cond: term '!' • '=' term

    '='  shift, and go to state 112


State 95

   37 if_block: IF '(' comparison ')' • stmt
   38         | IF '(' comparison ')' • stmt else_block

    INT     shift, and go to state 32
    IF      shift, and go to state 33
    WHILE   shift, and go to state 34
    RETURN  shift, and go to state 35
    STR     shift, and go to state 36
    READ    shift, and go to state 37
    PRINT   shift, and go to state 38
    '{'     shift, and go to state 29

    declaration       go to state 39
    return_statement  go to state 40
    assign            go to state 41
    func_call         go to state 42
    if_block          go to state 43
    while_block       go to state 44
    stmt              go to state 113
    comnd_block       go to state 47


State 96

   39 while_block: WHILE '(' comparison ')' • stmt

    INT     shift, and go to state 32
    IF      shift, and go to state 33
    WHILE   shift, and go to state 34
    RETURN  shift, and go to state 35
    STR     shift, and go to state 36
    READ    shift, and go to state 37
    PRINT   shift, and go to state 38
    '{'     shift, and go to state 29

    declaration       go to state 39
    return_statement  go to state 40
    assign            go to state 41
    func_call         go to state 42
    if_block          go to state 43
    while_block       go to state 44
    stmt              go to state 114
    comnd_block       go to state 47


State 97

   24 unary: '-' term ';' •

    $default  reduce using rule 24 (unary)


State 98

   20 add: term '+' term • ';'

    ';'  shift, and go to state 115


State 99

   21 subtract: term '-' term • ';'

    ';'  shift, and go to state 116


State 100

   22 multiply: term '*' term • ';'

    ';'  shift, and go to state 117


State 101

   23 divide: term '/' term • ';'

    ';'  shift, and go to state 118


State 102

   31 assign: STR '=' NUM ';' •

    $default  reduce using rule 31 (assign)


State 103

   32 assign: STR '=' STR ';' •

    $default  reduce using rule 32 (assign)


State 104

   36 func_call: READ '(' ')' ';' •

    $default  reduce using rule 36 (func_call)


State 105

   35 func_call: PRINT '(' NUM ')' • ';'

    ';'  shift, and go to state 119


State 106

   34 func_call: PRINT '(' STR ')' • ';'

    ';'  shift, and go to state 120


State 107

    8 eq_cond: term '=' '=' • term

    NUM  shift, and go to state 52
    STR  shift, and go to state 53

    term  go to state 121


State 108

   12 lteq_cond: term '<' '=' • term

    NUM  shift, and go to state 52
    STR  shift, and go to state 53

    term  go to state 122


State 109

    9 lt_cond: term '<' term •

    $default  reduce using rule 9 (lt_cond)


State 110

   11 gteq_cond: term '>' '=' • term

    NUM  shift, and go to state 52
    STR  shift, and go to state 53

    term  go to state 123


State 111

   10 gt_cond: term '>' term •

    $default  reduce using rule 10 (gt_cond)


State 112

   13 neq_cond: term '!' '=' • term

    NUM  shift, and go to state 52
    STR  shift, and go to state 53

    term  go to state 124


State 113

   37 if_block: IF '(' comparison ')' stmt •
   38         | IF '(' comparison ')' stmt • else_block

    ELSE  shift, and go to state 125

    ELSE      [reduce using rule 37 (if_block)]
    $default  reduce using rule 37 (if_block)

    else_block  go to state 126


State 114

   39 while_block: WHILE '(' comparison ')' stmt •

    $default  reduce using rule 39 (while_block)


State 115

   20 add: term '+' term ';' •

    $default  reduce using rule 20 (add)


State 116

   21 subtract: term '-' term ';' •

    $default  reduce using rule 21 (subtract)


State 117

   22 multiply: term '*' term ';' •

    $default  reduce using rule 22 (multiply)


State 118

   23 divide: term '/' term ';' •

    $default  reduce using rule 23 (divide)


State 119

   35 func_call: PRINT '(' NUM ')' ';' •

    $default  reduce using rule 35 (func_call)


State 120

   34 func_call: PRINT '(' STR ')' ';' •

    $default  reduce using rule 34 (func_call)


State 121

    8 eq_cond: term '=' '=' term •

    $default  reduce using rule 8 (eq_cond)


State 122

   12 lteq_cond: term '<' '=' term •

    $default  reduce using rule 12 (lteq_cond)


State 123

   11 gteq_cond: term '>' '=' term •

    $default  reduce using rule 11 (gteq_cond)


State 124

   13 neq_cond: term '!' '=' term •

    $default  reduce using rule 13 (neq_cond)


State 125

   40 else_block: ELSE • stmt

    INT     shift, and go to state 32
    IF      shift, and go to state 33
    WHILE   shift, and go to state 34
    RETURN  shift, and go to state 35
    STR     shift, and go to state 36
    READ    shift, and go to state 37
    PRINT   shift, and go to state 38
    '{'     shift, and go to state 29

    declaration       go to state 39
    return_statement  go to state 40
    assign            go to state 41
    func_call         go to state 42
    if_block          go to state 43
    while_block       go to state 44
    stmt              go to state 127
    comnd_block       go to state 47


State 126

   38 if_block: IF '(' comparison ')' stmt else_block •

    $default  reduce using rule 38 (if_block)


State 127

   40 else_block: ELSE stmt •

    $default  reduce using rule 40 (else_block)
