State 103 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 declaration: INT STR ';'

    2 definition1: EXTERN VOID PRINT '(' INT ')' ';'

    3 definition2: EXTERN INT READ '(' ')' ';'

    4 return_statement: RETURN term ';'
    5                 | RETURN expression

    6 term: NUM
    7     | STR

    8 eq_cond: term '=' '=' term

    9 lt_cond: term '<' term

   10 gt_cond: term '>' term

   11 gteq_cond: term '>' '=' term

   12 lteq_cond: term '<' '=' term

   13 neq_cond: term '!' '=' term

   14 comparison: eq_cond
   15           | lt_cond
   16           | lteq_cond
   17           | gteq_cond
   18           | gt_cond
   19           | neq_cond

   20 add: term '+' term ';'

   21 subtract: term '-' term ';'

   22 multiply: term '*' term ';'

   23 divide: term '/' term ';'

   24 expression: add
   25           | subtract
   26           | multiply
   27           | divide

   28 assign: STR '=' expression
   29       | STR '=' NUM ';'
   30       | STR '=' STR ';'
   31       | STR '=' func_call

   32 func_call: PRINT '(' STR ')' ';'
   33          | PRINT '(' NUM ')' ';'
   34          | READ '(' ')' ';'

   35 if_block: IF '(' comparison ')' stmt
   36         | IF '(' comparison ')' stmt else_block

   37 while_block: WHILE '(' comparison ')' stmt

   38 else_block: ELSE stmt

   39 stmt: func_call
   40     | return_statement
   41     | assign
   42     | declaration
   43     | if_block
   44     | while_block
   45     | comnd_block

   46 stmts: stmts stmt
   47      | stmt

   48 comnd_block: '{' stmts '}'

   49 func_def: INT STR '(' INT STR ')' comnd_block

   50 program: definition1 definition2 func_def


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 13
    '(' (40) 2 3 32 33 34 35 36 37 49
    ')' (41) 2 3 32 33 34 35 36 37 49
    '*' (42) 22
    '+' (43) 20
    '-' (45) 21
    '/' (47) 23
    ';' (59) 1 2 3 4 20 21 22 23 29 30 32 33 34
    '<' (60) 9 12
    '=' (61) 8 11 12 13 28 29 30 31
    '>' (62) 10 11
    '{' (123) 48
    '}' (125) 48
    error (256)
    INT (258) 1 2 3 49
    EXTERN (259) 2 3
    IF (260) 35 36
    WHILE (261) 37
    ELSE (262) 38
    RETURN (263) 4 5
    VOID (264) 2
    NUM <ival> (265) 6 29 33
    STR <sname> (266) 1 7 28 29 30 31 32 49
    READ <sname> (267) 3 34
    PRINT <sname> (268) 2 32 33


Nonterminals, with rules where they appear

    $accept (27)
        on left: 0
    declaration <nptr> (28)
        on left: 1
        on right: 42
    definition1 <nptr> (29)
        on left: 2
        on right: 50
    definition2 <nptr> (30)
        on left: 3
        on right: 50
    return_statement <nptr> (31)
        on left: 4 5
        on right: 40
    term <nptr> (32)
        on left: 6 7
        on right: 4 8 9 10 11 12 13 20 21 22 23
    eq_cond <nptr> (33)
        on left: 8
        on right: 14
    lt_cond <nptr> (34)
        on left: 9
        on right: 15
    gt_cond <nptr> (35)
        on left: 10
        on right: 18
    gteq_cond <nptr> (36)
        on left: 11
        on right: 17
    lteq_cond <nptr> (37)
        on left: 12
        on right: 16
    neq_cond <nptr> (38)
        on left: 13
        on right: 19
    comparison <nptr> (39)
        on left: 14 15 16 17 18 19
        on right: 35 36 37
    add <nptr> (40)
        on left: 20
        on right: 24
    subtract <nptr> (41)
        on left: 21
        on right: 25
    multiply <nptr> (42)
        on left: 22
        on right: 26
    divide <nptr> (43)
        on left: 23
        on right: 27
    expression <nptr> (44)
        on left: 24 25 26 27
        on right: 5 28
    assign <nptr> (45)
        on left: 28 29 30 31
        on right: 41
    func_call <nptr> (46)
        on left: 32 33 34
        on right: 31 39
    if_block <nptr> (47)
        on left: 35 36
        on right: 43
    while_block <nptr> (48)
        on left: 37
        on right: 44
    else_block <nptr> (49)
        on left: 38
        on right: 36
    stmt <nptr> (50)
        on left: 39 40 41 42 43 44 45
        on right: 35 36 37 38 46 47
    stmts <svec_ptr> (51)
        on left: 46 47
        on right: 46 48
    comnd_block <nptr> (52)
        on left: 48
        on right: 45 49
    func_def <nptr> (53)
        on left: 49
        on right: 50
    program <nptr> (54)
        on left: 50
        on right: 0


State 0

    0 $accept: • program $end

    EXTERN  shift, and go to state 1

    definition1  go to state 2
    program      go to state 3


State 1

    2 definition1: EXTERN • VOID PRINT '(' INT ')' ';'

    VOID  shift, and go to state 4


State 2

   50 program: definition1 • definition2 func_def

    EXTERN  shift, and go to state 5

    definition2  go to state 6


State 3

    0 $accept: program • $end

    $end  shift, and go to state 7


State 4

    2 definition1: EXTERN VOID • PRINT '(' INT ')' ';'

    PRINT  shift, and go to state 8


State 5

    3 definition2: EXTERN • INT READ '(' ')' ';'

    INT  shift, and go to state 9


State 6

   50 program: definition1 definition2 • func_def

    INT  shift, and go to state 10

    func_def  go to state 11


State 7

    0 $accept: program $end •

    $default  accept


State 8

    2 definition1: EXTERN VOID PRINT • '(' INT ')' ';'

    '('  shift, and go to state 12


State 9

    3 definition2: EXTERN INT • READ '(' ')' ';'

    READ  shift, and go to state 13


State 10

   49 func_def: INT • STR '(' INT STR ')' comnd_block

    STR  shift, and go to state 14


State 11

   50 program: definition1 definition2 func_def •

    $default  reduce using rule 50 (program)


State 12

    2 definition1: EXTERN VOID PRINT '(' • INT ')' ';'

    INT  shift, and go to state 15


State 13

    3 definition2: EXTERN INT READ • '(' ')' ';'

    '('  shift, and go to state 16


State 14

   49 func_def: INT STR • '(' INT STR ')' comnd_block

    '('  shift, and go to state 17


State 15

    2 definition1: EXTERN VOID PRINT '(' INT • ')' ';'

    ')'  shift, and go to state 18


State 16

    3 definition2: EXTERN INT READ '(' • ')' ';'

    ')'  shift, and go to state 19


State 17

   49 func_def: INT STR '(' • INT STR ')' comnd_block

    INT  shift, and go to state 20


State 18

    2 definition1: EXTERN VOID PRINT '(' INT ')' • ';'

    ';'  shift, and go to state 21


State 19

    3 definition2: EXTERN INT READ '(' ')' • ';'

    ';'  shift, and go to state 22


State 20

   49 func_def: INT STR '(' INT • STR ')' comnd_block

    STR  shift, and go to state 23


State 21

    2 definition1: EXTERN VOID PRINT '(' INT ')' ';' •

    $default  reduce using rule 2 (definition1)


State 22

    3 definition2: EXTERN INT READ '(' ')' ';' •

    $default  reduce using rule 3 (definition2)


State 23

   49 func_def: INT STR '(' INT STR • ')' comnd_block

    ')'  shift, and go to state 24


State 24

   49 func_def: INT STR '(' INT STR ')' • comnd_block

    '{'  shift, and go to state 25

    comnd_block  go to state 26


State 25

   48 comnd_block: '{' • stmts '}'

    INT     shift, and go to state 27
    IF      shift, and go to state 28
    WHILE   shift, and go to state 29
    RETURN  shift, and go to state 30
    STR     shift, and go to state 31
    READ    shift, and go to state 32
    PRINT   shift, and go to state 33
    '{'     shift, and go to state 25

    declaration       go to state 34
    return_statement  go to state 35
    assign            go to state 36
    func_call         go to state 37
    if_block          go to state 38
    while_block       go to state 39
    stmt              go to state 40
    stmts             go to state 41
    comnd_block       go to state 42


State 26

   49 func_def: INT STR '(' INT STR ')' comnd_block •

    $default  reduce using rule 49 (func_def)


State 27

    1 declaration: INT • STR ';'

    STR  shift, and go to state 43


State 28

   35 if_block: IF • '(' comparison ')' stmt
   36         | IF • '(' comparison ')' stmt else_block

    '('  shift, and go to state 44


State 29

   37 while_block: WHILE • '(' comparison ')' stmt

    '('  shift, and go to state 45


State 30

    4 return_statement: RETURN • term ';'
    5                 | RETURN • expression

    NUM  shift, and go to state 46
    STR  shift, and go to state 47

    term        go to state 48
    add         go to state 49
    subtract    go to state 50
    multiply    go to state 51
    divide      go to state 52
    expression  go to state 53


State 31

   28 assign: STR • '=' expression
   29       | STR • '=' NUM ';'
   30       | STR • '=' STR ';'
   31       | STR • '=' func_call

    '='  shift, and go to state 54


State 32

   34 func_call: READ • '(' ')' ';'

    '('  shift, and go to state 55


State 33

   32 func_call: PRINT • '(' STR ')' ';'
   33          | PRINT • '(' NUM ')' ';'

    '('  shift, and go to state 56


State 34

   42 stmt: declaration •

    $default  reduce using rule 42 (stmt)


State 35

   40 stmt: return_statement •

    $default  reduce using rule 40 (stmt)


State 36

   41 stmt: assign •

    $default  reduce using rule 41 (stmt)


State 37

   39 stmt: func_call •

    $default  reduce using rule 39 (stmt)


State 38

   43 stmt: if_block •

    $default  reduce using rule 43 (stmt)


State 39

   44 stmt: while_block •

    $default  reduce using rule 44 (stmt)


State 40

   47 stmts: stmt •

    $default  reduce using rule 47 (stmts)


State 41

   46 stmts: stmts • stmt
   48 comnd_block: '{' stmts • '}'

    INT     shift, and go to state 27
    IF      shift, and go to state 28
    WHILE   shift, and go to state 29
    RETURN  shift, and go to state 30
    STR     shift, and go to state 31
    READ    shift, and go to state 32
    PRINT   shift, and go to state 33
    '{'     shift, and go to state 25
    '}'     shift, and go to state 57

    declaration       go to state 34
    return_statement  go to state 35
    assign            go to state 36
    func_call         go to state 37
    if_block          go to state 38
    while_block       go to state 39
    stmt              go to state 58
    comnd_block       go to state 42


State 42

   45 stmt: comnd_block •

    $default  reduce using rule 45 (stmt)


State 43

    1 declaration: INT STR • ';'

    ';'  shift, and go to state 59


State 44

   35 if_block: IF '(' • comparison ')' stmt
   36         | IF '(' • comparison ')' stmt else_block

    NUM  shift, and go to state 46
    STR  shift, and go to state 47

    term        go to state 60
    eq_cond     go to state 61
    lt_cond     go to state 62
    gt_cond     go to state 63
    gteq_cond   go to state 64
    lteq_cond   go to state 65
    neq_cond    go to state 66
    comparison  go to state 67


State 45

   37 while_block: WHILE '(' • comparison ')' stmt

    NUM  shift, and go to state 46
    STR  shift, and go to state 47

    term        go to state 60
    eq_cond     go to state 61
    lt_cond     go to state 62
    gt_cond     go to state 63
    gteq_cond   go to state 64
    lteq_cond   go to state 65
    neq_cond    go to state 66
    comparison  go to state 68


State 46

    6 term: NUM •

    $default  reduce using rule 6 (term)


State 47

    7 term: STR •

    $default  reduce using rule 7 (term)


State 48

    4 return_statement: RETURN term • ';'
   20 add: term • '+' term ';'
   21 subtract: term • '-' term ';'
   22 multiply: term • '*' term ';'
   23 divide: term • '/' term ';'

    ';'  shift, and go to state 69
    '+'  shift, and go to state 70
    '-'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73


State 49

   24 expression: add •

    $default  reduce using rule 24 (expression)


State 50

   25 expression: subtract •

    $default  reduce using rule 25 (expression)


State 51

   26 expression: multiply •

    $default  reduce using rule 26 (expression)


State 52

   27 expression: divide •

    $default  reduce using rule 27 (expression)


State 53

    5 return_statement: RETURN expression •

    $default  reduce using rule 5 (return_statement)


State 54

   28 assign: STR '=' • expression
   29       | STR '=' • NUM ';'
   30       | STR '=' • STR ';'
   31       | STR '=' • func_call

    NUM    shift, and go to state 74
    STR    shift, and go to state 75
    READ   shift, and go to state 32
    PRINT  shift, and go to state 33

    term        go to state 76
    add         go to state 49
    subtract    go to state 50
    multiply    go to state 51
    divide      go to state 52
    expression  go to state 77
    func_call   go to state 78


State 55

   34 func_call: READ '(' • ')' ';'

    ')'  shift, and go to state 79


State 56

   32 func_call: PRINT '(' • STR ')' ';'
   33          | PRINT '(' • NUM ')' ';'

    NUM  shift, and go to state 80
    STR  shift, and go to state 81


State 57

   48 comnd_block: '{' stmts '}' •

    $default  reduce using rule 48 (comnd_block)


State 58

   46 stmts: stmts stmt •

    $default  reduce using rule 46 (stmts)


State 59

    1 declaration: INT STR ';' •

    $default  reduce using rule 1 (declaration)


State 60

    8 eq_cond: term • '=' '=' term
    9 lt_cond: term • '<' term
   10 gt_cond: term • '>' term
   11 gteq_cond: term • '>' '=' term
   12 lteq_cond: term • '<' '=' term
   13 neq_cond: term • '!' '=' term

    '='  shift, and go to state 82
    '<'  shift, and go to state 83
    '>'  shift, and go to state 84
    '!'  shift, and go to state 85


State 61

   14 comparison: eq_cond •

    $default  reduce using rule 14 (comparison)


State 62

   15 comparison: lt_cond •

    $default  reduce using rule 15 (comparison)


State 63

   18 comparison: gt_cond •

    $default  reduce using rule 18 (comparison)


State 64

   17 comparison: gteq_cond •

    $default  reduce using rule 17 (comparison)


State 65

   16 comparison: lteq_cond •

    $default  reduce using rule 16 (comparison)


State 66

   19 comparison: neq_cond •

    $default  reduce using rule 19 (comparison)


State 67

   35 if_block: IF '(' comparison • ')' stmt
   36         | IF '(' comparison • ')' stmt else_block

    ')'  shift, and go to state 86


State 68

   37 while_block: WHILE '(' comparison • ')' stmt

    ')'  shift, and go to state 87


State 69

    4 return_statement: RETURN term ';' •

    $default  reduce using rule 4 (return_statement)


State 70

   20 add: term '+' • term ';'

    NUM  shift, and go to state 46
    STR  shift, and go to state 47

    term  go to state 88


State 71

   21 subtract: term '-' • term ';'

    NUM  shift, and go to state 46
    STR  shift, and go to state 47

    term  go to state 89


State 72

   22 multiply: term '*' • term ';'

    NUM  shift, and go to state 46
    STR  shift, and go to state 47

    term  go to state 90


State 73

   23 divide: term '/' • term ';'

    NUM  shift, and go to state 46
    STR  shift, and go to state 47

    term  go to state 91


State 74

    6 term: NUM •
   29 assign: STR '=' NUM • ';'

    ';'  shift, and go to state 92

    $default  reduce using rule 6 (term)


State 75

    7 term: STR •
   30 assign: STR '=' STR • ';'

    ';'  shift, and go to state 93

    $default  reduce using rule 7 (term)


State 76

   20 add: term • '+' term ';'
   21 subtract: term • '-' term ';'
   22 multiply: term • '*' term ';'
   23 divide: term • '/' term ';'

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71
    '*'  shift, and go to state 72
    '/'  shift, and go to state 73


State 77

   28 assign: STR '=' expression •

    $default  reduce using rule 28 (assign)


State 78

   31 assign: STR '=' func_call •

    $default  reduce using rule 31 (assign)


State 79

   34 func_call: READ '(' ')' • ';'

    ';'  shift, and go to state 94


State 80

   33 func_call: PRINT '(' NUM • ')' ';'

    ')'  shift, and go to state 95


State 81

   32 func_call: PRINT '(' STR • ')' ';'

    ')'  shift, and go to state 96


State 82

    8 eq_cond: term '=' • '=' term

    '='  shift, and go to state 97


State 83

    9 lt_cond: term '<' • term
   12 lteq_cond: term '<' • '=' term

    NUM  shift, and go to state 46
    STR  shift, and go to state 47
    '='  shift, and go to state 98

    term  go to state 99


State 84

   10 gt_cond: term '>' • term
   11 gteq_cond: term '>' • '=' term

    NUM  shift, and go to state 46
    STR  shift, and go to state 47
    '='  shift, and go to state 100

    term  go to state 101


State 85

   13 neq_cond: term '!' • '=' term

    '='  shift, and go to state 102


State 86

   35 if_block: IF '(' comparison ')' • stmt
   36         | IF '(' comparison ')' • stmt else_block

    INT     shift, and go to state 27
    IF      shift, and go to state 28
    WHILE   shift, and go to state 29
    RETURN  shift, and go to state 30
    STR     shift, and go to state 31
    READ    shift, and go to state 32
    PRINT   shift, and go to state 33
    '{'     shift, and go to state 25

    declaration       go to state 34
    return_statement  go to state 35
    assign            go to state 36
    func_call         go to state 37
    if_block          go to state 38
    while_block       go to state 39
    stmt              go to state 103
    comnd_block       go to state 42


State 87

   37 while_block: WHILE '(' comparison ')' • stmt

    INT     shift, and go to state 27
    IF      shift, and go to state 28
    WHILE   shift, and go to state 29
    RETURN  shift, and go to state 30
    STR     shift, and go to state 31
    READ    shift, and go to state 32
    PRINT   shift, and go to state 33
    '{'     shift, and go to state 25

    declaration       go to state 34
    return_statement  go to state 35
    assign            go to state 36
    func_call         go to state 37
    if_block          go to state 38
    while_block       go to state 39
    stmt              go to state 104
    comnd_block       go to state 42


State 88

   20 add: term '+' term • ';'

    ';'  shift, and go to state 105


State 89

   21 subtract: term '-' term • ';'

    ';'  shift, and go to state 106


State 90

   22 multiply: term '*' term • ';'

    ';'  shift, and go to state 107


State 91

   23 divide: term '/' term • ';'

    ';'  shift, and go to state 108


State 92

   29 assign: STR '=' NUM ';' •

    $default  reduce using rule 29 (assign)


State 93

   30 assign: STR '=' STR ';' •

    $default  reduce using rule 30 (assign)


State 94

   34 func_call: READ '(' ')' ';' •

    $default  reduce using rule 34 (func_call)


State 95

   33 func_call: PRINT '(' NUM ')' • ';'

    ';'  shift, and go to state 109


State 96

   32 func_call: PRINT '(' STR ')' • ';'

    ';'  shift, and go to state 110


State 97

    8 eq_cond: term '=' '=' • term

    NUM  shift, and go to state 46
    STR  shift, and go to state 47

    term  go to state 111


State 98

   12 lteq_cond: term '<' '=' • term

    NUM  shift, and go to state 46
    STR  shift, and go to state 47

    term  go to state 112


State 99

    9 lt_cond: term '<' term •

    $default  reduce using rule 9 (lt_cond)


State 100

   11 gteq_cond: term '>' '=' • term

    NUM  shift, and go to state 46
    STR  shift, and go to state 47

    term  go to state 113


State 101

   10 gt_cond: term '>' term •

    $default  reduce using rule 10 (gt_cond)


State 102

   13 neq_cond: term '!' '=' • term

    NUM  shift, and go to state 46
    STR  shift, and go to state 47

    term  go to state 114


State 103

   35 if_block: IF '(' comparison ')' stmt •
   36         | IF '(' comparison ')' stmt • else_block

    ELSE  shift, and go to state 115

    ELSE      [reduce using rule 35 (if_block)]
    $default  reduce using rule 35 (if_block)

    else_block  go to state 116


State 104

   37 while_block: WHILE '(' comparison ')' stmt •

    $default  reduce using rule 37 (while_block)


State 105

   20 add: term '+' term ';' •

    $default  reduce using rule 20 (add)


State 106

   21 subtract: term '-' term ';' •

    $default  reduce using rule 21 (subtract)


State 107

   22 multiply: term '*' term ';' •

    $default  reduce using rule 22 (multiply)


State 108

   23 divide: term '/' term ';' •

    $default  reduce using rule 23 (divide)


State 109

   33 func_call: PRINT '(' NUM ')' ';' •

    $default  reduce using rule 33 (func_call)


State 110

   32 func_call: PRINT '(' STR ')' ';' •

    $default  reduce using rule 32 (func_call)


State 111

    8 eq_cond: term '=' '=' term •

    $default  reduce using rule 8 (eq_cond)


State 112

   12 lteq_cond: term '<' '=' term •

    $default  reduce using rule 12 (lteq_cond)


State 113

   11 gteq_cond: term '>' '=' term •

    $default  reduce using rule 11 (gteq_cond)


State 114

   13 neq_cond: term '!' '=' term •

    $default  reduce using rule 13 (neq_cond)


State 115

   38 else_block: ELSE • stmt

    INT     shift, and go to state 27
    IF      shift, and go to state 28
    WHILE   shift, and go to state 29
    RETURN  shift, and go to state 30
    STR     shift, and go to state 31
    READ    shift, and go to state 32
    PRINT   shift, and go to state 33
    '{'     shift, and go to state 25

    declaration       go to state 34
    return_statement  go to state 35
    assign            go to state 36
    func_call         go to state 37
    if_block          go to state 38
    while_block       go to state 39
    stmt              go to state 117
    comnd_block       go to state 42


State 116

   36 if_block: IF '(' comparison ')' stmt else_block •

    $default  reduce using rule 36 (if_block)


State 117

   38 else_block: ELSE stmt •

    $default  reduce using rule 38 (else_block)
